// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../../app/(app)/contacts/[id]/edit/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contacts/[id]/edit">> = Specific
  const handler = {} as typeof import("../../../app/(app)/contacts/[id]/edit/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(app)/contacts/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contacts/new">> = Specific
  const handler = {} as typeof import("../../../app/(app)/contacts/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(app)/contacts/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contacts">> = Specific
  const handler = {} as typeof import("../../../app/(app)/contacts/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(app)/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../../app/(app)/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(app)/projects/[slug]/edit/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/projects/[slug]/edit">> = Specific
  const handler = {} as typeof import("../../../app/(app)/projects/[slug]/edit/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(app)/projects/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/projects/[slug]">> = Specific
  const handler = {} as typeof import("../../../app/(app)/projects/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(app)/projects/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/projects/new">> = Specific
  const handler = {} as typeof import("../../../app/(app)/projects/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(app)/projects/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/projects">> = Specific
  const handler = {} as typeof import("../../../app/(app)/projects/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(app)/settings/billing/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings/billing">> = Specific
  const handler = {} as typeof import("../../../app/(app)/settings/billing/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(app)/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../../app/(app)/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(app)/settings/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings/profile">> = Specific
  const handler = {} as typeof import("../../../app/(app)/settings/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(app)/settings/team/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings/team">> = Specific
  const handler = {} as typeof import("../../../app/(app)/settings/team/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(auth)/sign-in/[[...sign-in]]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/sign-in/[[...sign-in]]">> = Specific
  const handler = {} as typeof import("../../../app/(auth)/sign-in/[[...sign-in]]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(auth)/sign-up/[[...sign-up]]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/sign-up/[[...sign-up]]">> = Specific
  const handler = {} as typeof import("../../../app/(auth)/sign-up/[[...sign-up]]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/about/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/about">> = Specific
  const handler = {} as typeof import("../../../app/about/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/privacy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/privacy">> = Specific
  const handler = {} as typeof import("../../../app/privacy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/terms/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/terms">> = Specific
  const handler = {} as typeof import("../../../app/terms/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/contacts/[id]/image/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/contacts/[id]/image">> = Specific
  const handler = {} as typeof import("../../../app/api/contacts/[id]/image/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/contacts/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/contacts/[id]">> = Specific
  const handler = {} as typeof import("../../../app/api/contacts/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/contacts/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/contacts">> = Specific
  const handler = {} as typeof import("../../../app/api/contacts/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/organizations/[id]/logo/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/organizations/[id]/logo">> = Specific
  const handler = {} as typeof import("../../../app/api/organizations/[id]/logo/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/organizations/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/organizations/[id]">> = Specific
  const handler = {} as typeof import("../../../app/api/organizations/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/organizations/check-slug/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/organizations/check-slug">> = Specific
  const handler = {} as typeof import("../../../app/api/organizations/check-slug/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/phases/[id]/contacts/[contactId]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/phases/[id]/contacts/[contactId]">> = Specific
  const handler = {} as typeof import("../../../app/api/phases/[id]/contacts/[contactId]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/phases/[id]/contacts/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/phases/[id]/contacts">> = Specific
  const handler = {} as typeof import("../../../app/api/phases/[id]/contacts/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/phases/[id]/recalculate-duration/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/phases/[id]/recalculate-duration">> = Specific
  const handler = {} as typeof import("../../../app/api/phases/[id]/recalculate-duration/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/phases/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/phases/[id]">> = Specific
  const handler = {} as typeof import("../../../app/api/phases/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/phases/[id]/status/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/phases/[id]/status">> = Specific
  const handler = {} as typeof import("../../../app/api/phases/[id]/status/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/phases/[id]/tasks/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/phases/[id]/tasks">> = Specific
  const handler = {} as typeof import("../../../app/api/phases/[id]/tasks/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/projects/[slug]/documents/[documentId]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/projects/[slug]/documents/[documentId]">> = Specific
  const handler = {} as typeof import("../../../app/api/projects/[slug]/documents/[documentId]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/projects/[slug]/documents/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/projects/[slug]/documents">> = Specific
  const handler = {} as typeof import("../../../app/api/projects/[slug]/documents/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/projects/[slug]/phases/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/projects/[slug]/phases">> = Specific
  const handler = {} as typeof import("../../../app/api/projects/[slug]/phases/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/projects/[slug]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/projects/[slug]">> = Specific
  const handler = {} as typeof import("../../../app/api/projects/[slug]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/projects/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/projects">> = Specific
  const handler = {} as typeof import("../../../app/api/projects/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/sms/send/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/sms/send">> = Specific
  const handler = {} as typeof import("../../../app/api/sms/send/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/user/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/user">> = Specific
  const handler = {} as typeof import("../../../app/api/user/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/waitlist/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/waitlist">> = Specific
  const handler = {} as typeof import("../../../app/api/waitlist/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/api/webhooks/clerk/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/webhooks/clerk">> = Specific
  const handler = {} as typeof import("../../../app/api/webhooks/clerk/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../../app/(app)/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../../app/(app)/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(app)/settings/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../../app/(app)/settings/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/(auth)/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../../app/(auth)/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
