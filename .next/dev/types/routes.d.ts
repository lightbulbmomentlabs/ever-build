// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/contacts" | "/contacts/[id]/edit" | "/contacts/new" | "/dashboard" | "/privacy" | "/projects" | "/projects/[slug]" | "/projects/[slug]/edit" | "/projects/new" | "/settings" | "/settings/billing" | "/settings/profile" | "/settings/team" | "/sign-in/[[...sign-in]]" | "/sign-up/[[...sign-up]]" | "/terms"
type AppRouteHandlerRoutes = "/api/contacts" | "/api/contacts/[id]" | "/api/contacts/[id]/image" | "/api/organizations/[id]" | "/api/organizations/[id]/logo" | "/api/organizations/check-slug" | "/api/phases/[id]" | "/api/phases/[id]/contacts" | "/api/phases/[id]/contacts/[contactId]" | "/api/phases/[id]/recalculate-duration" | "/api/phases/[id]/status" | "/api/phases/[id]/tasks" | "/api/projects" | "/api/projects/[slug]" | "/api/projects/[slug]/documents" | "/api/projects/[slug]/documents/[documentId]" | "/api/projects/[slug]/phases" | "/api/sms/send" | "/api/user" | "/api/waitlist" | "/api/webhooks/clerk"
type PageRoutes = never
type LayoutRoutes = "/" | "/settings"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/api/contacts": {}
  "/api/contacts/[id]": { "id": string; }
  "/api/contacts/[id]/image": { "id": string; }
  "/api/organizations/[id]": { "id": string; }
  "/api/organizations/[id]/logo": { "id": string; }
  "/api/organizations/check-slug": {}
  "/api/phases/[id]": { "id": string; }
  "/api/phases/[id]/contacts": { "id": string; }
  "/api/phases/[id]/contacts/[contactId]": { "id": string; "contactId": string; }
  "/api/phases/[id]/recalculate-duration": { "id": string; }
  "/api/phases/[id]/status": { "id": string; }
  "/api/phases/[id]/tasks": { "id": string; }
  "/api/projects": {}
  "/api/projects/[slug]": { "slug": string; }
  "/api/projects/[slug]/documents": { "slug": string; }
  "/api/projects/[slug]/documents/[documentId]": { "slug": string; "documentId": string; }
  "/api/projects/[slug]/phases": { "slug": string; }
  "/api/sms/send": {}
  "/api/user": {}
  "/api/waitlist": {}
  "/api/webhooks/clerk": {}
  "/contacts": {}
  "/contacts/[id]/edit": { "id": string; }
  "/contacts/new": {}
  "/dashboard": {}
  "/privacy": {}
  "/projects": {}
  "/projects/[slug]": { "slug": string; }
  "/projects/[slug]/edit": { "slug": string; }
  "/projects/new": {}
  "/settings": {}
  "/settings/billing": {}
  "/settings/profile": {}
  "/settings/team": {}
  "/sign-in/[[...sign-in]]": { "sign-in"?: string[]; }
  "/sign-up/[[...sign-up]]": { "sign-up"?: string[]; }
  "/terms": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/settings": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
